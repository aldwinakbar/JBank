#BlueJ class context
comment0.params=fname\ lname
comment0.target=Customer(java.lang.String,\ java.lang.String)
comment0.text=\n\ Customer\ Constructor\n\n\ @param\ fname\ A\ parameter\ for\ customer\ first\ name\n\ @param\ lname\ A\ parameter\ for\ customer\ last\ name\n
comment1.params=firstName\ lastName\ dateOfBirth
comment1.target=Customer(java.lang.String,\ java.lang.String,\ java.util.Date)
comment1.text=\n\ Constructor\ overload\ for\ objects\ of\ class\ Customer\n\ @param\ firstName,\ lastName,\ dateOfBirth,\ custId\ of\ the\ customer\n\ \n
comment10.params=
comment10.target=java.lang.String\ getEmail()
comment10.text=\n\ Method\ to\ get\ email\ information\n\ \n\ @return\ email\ in\ String\n
comment11.params=
comment11.target=java.util.Date\ getDateOfBirth()
comment11.text=\n\ Method\ getDateOfBirth\ to\ get\ the\ customer\ date\ of\ birth\n\n\ @return\ The\ return\ value\ is\ the\ customer\ date\ of\ birth\ in\ Date\n
comment12.params=
comment12.target=java.lang.String\ getCustomerName()
comment12.text=\n\ Method\ to\ get\ customer\ name\n\ \n\ @return\ lastname,firstname\ of\ the\ customer\ in\ String\n
comment13.params=
comment13.target=java.lang.String\ getCustomerFirstName()
comment13.text=\n\ Method\ getCustomerFirstName\ to\ get\ the\ customer\ first\ nme\n\n\ @return\ The\ return\ value\ of\ the\ customer\ first\ name\ in\ string\n
comment14.params=
comment14.target=java.lang.String\ getCustomerLastName()
comment14.text=\n\ Method\ getCustomerLastName\ to\ get\ the\ customer\ last\ name\n\n\ @return\ The\ return\ value\ of\ the\ customer\ last\ name\ in\ string\n
comment15.params=
comment15.target=int\ getNumOfAccounts()
comment15.text=\n\ Meethod\ to\ get\ the\ number\ of\ accounts\ of\ the\ customer\n\ \n\ @return\ number\ oof\ accounts\ in\ integer\n
comment16.params=
comment16.target=java.lang.String\ getPhoneNumber()
comment16.text=\n\ Method\ to\ get\ the\ customer\ phone\ number\ \n\ \n\ @return\ customer\ phone\ number\ in\ String\n
comment17.params=emailAddress
comment17.target=boolean\ setEmail(java.lang.String)
comment17.text=\n\ Method\ to\ set\ email\ of\ the\ customer,\ also\ checks\ the\ format\ of\ the\ email\ using\ regex\ with\ RFC\ 5322\n\n\ @param\ emailAddress\n\ @return\ false,\ true\n
comment18.params=cust_id_input
comment18.target=void\ setCustId(int)
comment18.text=\n\ Method\ to\ change\ the\ account\ of\ the\ Customer\n\ \n\ @param\ account_input\n
comment19.params=phoneNum
comment19.target=void\ setPhoneNumber(java.lang.String)
comment19.text=\n\ Method\ to\ change\ phone\ number\ that\ belongs\ to\ customer\n\ \n\ @param\ phoneNum\n
comment2.params=type
comment2.target=Account\ getAccount(char)
comment2.text=\n\ Method\ to\ get\ account\ data\ of\ the\ customer\n\ \n\ @param\ account\ type\ in\ char,\ S,\ I,\ O,\ or\ C\n\ @return\ an\ account\ object\n\ @throws\ throws\ an\ Exception\ of\ AccountTypeNotFoundException,\ if\ account\ does\ not\ exsist\n
comment20.params=street
comment20.target=void\ setStreetAddress(java.lang.String)
comment20.text=\n\ Method\ setStreetAddress\ to\ set\ customer\ street\ address\n\n\ @param\ street\ A\ parameter\ of\ the\ street\ address\n
comment21.params=city
comment21.target=void\ setCityAddress(java.lang.String)
comment21.text=\n\ Method\ setCityAddress\ to\ set\ city\ address\ of\ the\ customer\n\n\ @param\ city\ A\ parameter\ of\ the\ address\ of\ the\ city\n
comment22.params=zip_code
comment22.target=void\ setPostalCode(java.lang.String)
comment22.text=\n\ Method\ setPostalCode\ to\ set\ postal\ code\ of\ the\ customer\ address\n\n\ @param\ zip_code\ A\ parameter\ of\ the\ customer\ postal\ code\n
comment23.params=o
comment23.target=int\ compareTo(Customer)
comment23.text=\n\ Method\ compareTo\ to\ use\ as\ a\ comparator\ to\ sort\ the\ Customer\ object\ in\ a\ SortedSet\n\n\ @return\ The\ return\ value\ is\ a\ id\ for\ the\ sorted\ customer\n
comment3.params=type
comment3.target=boolean\ addAccount(Account)
comment3.text=\n\ Method\ to\ change\ the\ account\ of\ the\ Customer\n\ \n\ @param\ Account\ object\ for\ the\ Customer\ object\n\ @throws\ an\ exception\ of\ AccountTypeAlreadyExistsException,\ if\ account\ already\ exsist\n\ @return\ true\ if\ success,\ false\ if\ failed\n
comment4.params=type
comment4.target=boolean\ removeAccount(char)
comment4.text=\n\ Method\ removeAccount\ of\ the\ related\ customer\ object,\ and\ give\ the\ related\ slot\ to\ a\ null\ value\n\n\ @param\ type\ A\ parameter\ to\ for\ the\ account\ type\n\ @return\ The\ return\ value\ true\ or\ false.\n
comment5.params=
comment5.target=java.lang.String\ getAddress()
comment5.text=\n\ Method\ to\ get\ address\ information\ of\ the\ related\ customer.\n\ \n\ @param\ firstName,\ lastName,\ dateOfBirth,\ custId\ of\ the\ customer\n\ @return\ address\ information\ as\ String\n
comment6.params=
comment6.target=java.lang.String\ getstreetAddress()
comment6.text=\n\ Method\ getstreetAddress\ to\ get\ the\ Street\ Address\ of\ the\ customer\n\n\ @return\ The\ return\ value\ is\ the\ street\ addres\ in\ string\n
comment7.params=
comment7.target=java.lang.String\ getcityAddress()
comment7.text=\n\ Method\ getcityAddress\ to\ get\ the\ city\ address\ of\ the\ customer\n\n\ @return\ The\ return\ value\ is\ the\ city\ address\ in\ string\n
comment8.params=
comment8.target=java.lang.String\ getzipOrPostalCode()
comment8.text=\n\ Method\ getzipOrPostalCode\ to\ get\ the\ postalCode\ of\ the\ customer\ address\n\n\ @return\ The\ return\ value\ is\ the\ postal\ code\ in\ string\n
comment9.params=
comment9.target=int\ getCustomerId()
comment9.text=\n\ Method\ to\ get\ customer\ id\ number\n\ \n\ @return\ customer\ id\ in\ integer\n
numComments=24
